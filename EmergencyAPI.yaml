openapi: 3.0.2
info:
  title: EmergencyAPI
  version: '1.0'
  termsOfService: 'https://emergency-example.spilab.es/terms'
  contact:
    name: EmergencyAPI
    url: 'https://spilab.es'
    email: info@spilab.es
paths:
  /alert:
    post:
      tags:
        - Alert
      operationId: postAlert
      summary: Sends an alert to the users.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Alert'
      responses:
        '201':
          $ref: '#/components/responses/201'
  /user:
    get:
      tags:
        - User
      operationId: getUsers
      summary: Gets user id within an area.
      parameters:
        - name: latitude
          in: query
          required: true
          schema:
            type: number
            format: double
        - name: longitude
          in: query
          required: true
          schema:
            type: number
            format: double
        - name: radius
          in: query
          required: true
          schema:
            type: number
            format: double
      responses:
        '200':
          $ref: '#/components/responses/200user'
        '404':
          $ref: '#/components/responses/404'
  /user/status:
    get:
      tags:
        - User
      operationId: getStatus
      summary: Gets user status.
      parameters:
        - name: idUser
          in: query
          required: true
          schema:
            type: number
            format: double
        - name: minActivity
          in: query
          required: true
          schema:
            type: number
            format: double
        - name: range
          in: query
          required: true
          schema:
            type: number
            format: double
        
      responses:
        '200':
          $ref: '#/components/responses/200status'
        '404':
          $ref: '#/components/responses/404'
  /user/check:
    post:
      tags:
        - User
      operationId: postStatus
      summary: Send checking to the user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Alert'
      responses:
        '201':
          $ref: '#/components/responses/201'
  /user/location:
    get:
      tags:
        - User
      operationId: getLocation
      summary: Gets user location.
      responses:
        '200':
          $ref: '#/components/responses/200location'
        '404':
          $ref: '#/components/responses/404'
      
  /user/health:
    get:
      tags:
        - User
      operationId: getHealth
      summary: Gets user health report.
      responses:
        '200':
          $ref: '#/components/responses/200health'
        '404':
          $ref: '#/components/responses/404'
components:
  schemas:
    Alert:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        title:
          type: string
          example: 'Earthquake in the south zone of the city!'
        description:
          type: string
          example: 'Earthquake in the south zone of the city with epicenter in the main avenue.'
        area:
          $ref: '#/components/schemas/Area'
    Area:
      type: object
      properties:
        latitude:
          type: number
          format: double
          example: 38.514377
        longitude: 
          type: number
          format: double
          example: -6.844325
        radius:
          type: number
          format: double
          example: 1000
    Status:
      type: object
      properties:
        activity:
          type: string
          example: "1 hour and 50 min"
        longitude: 
          type: number
          format: double
          example: -6.844325
    Location:
      type: object
      properties:
        latitude:
          type: number
          format: double
          example: 38.514377
        longitude: 
          type: number
          format: double
          example: -6.844325
    Health:
      type: object
      properties:
        history:
          type: string
  responses:
    200user:
        description: Returns idUser.
        content:
          application/json::
            schema:
              title: idUser
              type: string
              example: user447721
    200location:
        description: Returns location.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
    200status:
        description: Returns status of the user.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
    200value:
        description: Returns a numerical value.
        content:
          application/json::
            schema:
              title: Numerical value
              type: number
              format: double
              example: 80.5
    200health:
        description: Returns a boolean value.
        content:
          application/json::
            schema:
              $ref: '#/components/schemas/Health'
    201:
      description: Posted
      content:
        text/plain:
          schema:
            title: Posted
            type: string
    201status:
      description: Status
      content:
        text/plain:
          schema:
            title: Status
            type: string
    404:
      description: Not found response
     
